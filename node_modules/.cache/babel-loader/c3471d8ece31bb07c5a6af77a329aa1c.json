{"ast":null,"code":"import{readPsd}from'ag-psd';import{writePsdBuffer}from'ag-psd';import'ag-psd/initialize-canvas';import axios from'axios';var writePSD=function writePSD(data,templateData){console.log('writePSD');console.log(templateData);var originalPsd=readPsd(Buffer.from(data.data),{skipLayerImageData:false,skipCompositeImageData:false,skipThumbnail:false});if(templateData.currentCategory==='Frame'){console.info(\"writePSD met Frame template\");originalPsd.children.splice(1,2);}else if(templateData.currentCategory==='Product'){console.info(\"writePSD met Product template\");originalPsd.children.splice(2,1);originalPsd.children.splice(0,1);}else{console.info(\"writePSD met Message template\");originalPsd.children.splice(0,2);}var chosenElements=templateData.chosenElements.filter(function(element){return element.selected;});console.log(chosenElements);console.log(originalPsd.children[0].children);//DOE DINGEN MET DE DINGEN DIE ELEMENT.SELECTED === true\nchosenElements.forEach(function(item){console.log(item);});var buffer=writePsdBuffer(originalPsd);var returnData=new FormData();returnData.append('ori',JSON.stringify(buffer));// returnData.append('template', JSON.stringify(templateData))\naxios.post('/writeNewFile',returnData,{}).then(function(res){console.log(res.statusText);}).catch(function(error){console.log(error);});};export default writePSD;","map":{"version":3,"sources":["/Users/josvandemanakker/Documents/git_repos/dooh-template-tool/src/utils/writePsd.js"],"names":["readPsd","writePsdBuffer","axios","writePSD","data","templateData","console","log","originalPsd","Buffer","from","skipLayerImageData","skipCompositeImageData","skipThumbnail","currentCategory","info","children","splice","chosenElements","filter","element","selected","forEach","item","buffer","returnData","FormData","append","JSON","stringify","post","then","res","statusText","catch","error"],"mappings":"AAAA,OAASA,OAAT,KAAwB,QAAxB,CACA,OAASC,cAAT,KAA+B,QAA/B,CACA,MAAO,0BAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAOC,YAAP,CAAwB,CACvCC,OAAO,CAACC,GAAR,CAAY,UAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,YAAZ,EACA,GAAMG,CAAAA,WAAW,CAAGR,OAAO,CAACS,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACA,IAAjB,CAAD,CAAyB,CAAEO,kBAAkB,CAAE,KAAtB,CAA6BC,sBAAsB,CAAE,KAArD,CAA4DC,aAAa,CAAE,KAA3E,CAAzB,CAA3B,CAEA,GAAIR,YAAY,CAACS,eAAb,GAAiC,OAArC,CAA8C,CAC5CR,OAAO,CAACS,IAAR,gCACAP,WAAW,CAACQ,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,CAA+B,CAA/B,EAED,CAJD,IAIO,IAAIZ,YAAY,CAACS,eAAb,GAAiC,SAArC,CAAgD,CACrDR,OAAO,CAACS,IAAR,kCACAP,WAAW,CAACQ,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,CAA+B,CAA/B,EACAT,WAAW,CAACQ,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,CAA+B,CAA/B,EACD,CAJM,IAIA,CACLX,OAAO,CAACS,IAAR,kCACAP,WAAW,CAACQ,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,CAA+B,CAA/B,EACD,CAED,GAAMC,CAAAA,cAAc,CAAGb,YAAY,CAACa,cAAb,CAA4BC,MAA5B,CAAmC,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,QAAZ,EAA1C,CAAvB,CACAf,OAAO,CAACC,GAAR,CAAYW,cAAZ,EACAZ,OAAO,CAACC,GAAR,CAAYC,WAAW,CAACQ,QAAZ,CAAqB,CAArB,EAAwBA,QAApC,EACA;AACAE,cAAc,CAACI,OAAf,CAAuB,SAAAC,IAAI,CAAI,CAC7BjB,OAAO,CAACC,GAAR,CAAYgB,IAAZ,EACD,CAFD,EAKA,GAAMC,CAAAA,MAAM,CAAGvB,cAAc,CAACO,WAAD,CAA7B,CACA,GAAMiB,CAAAA,UAAU,CAAG,GAAIC,CAAAA,QAAJ,EAAnB,CACAD,UAAU,CAACE,MAAX,CAAkB,KAAlB,CAAyBC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAzB,EACA;AAEAtB,KAAK,CAAC4B,IAAN,CAAW,eAAX,CAA4BL,UAA5B,CAAwC,EAAxC,EACGM,IADH,CACQ,SAAAC,GAAG,CAAI,CACb1B,OAAO,CAACC,GAAR,CAAYyB,GAAG,CAACC,UAAhB,EACD,CAHD,EAGGC,KAHH,CAGS,SAAUC,KAAV,CAAiB,CACxB7B,OAAO,CAACC,GAAR,CAAY4B,KAAZ,EACD,CALD,EAMD,CAtCD,CAwCA,cAAehC,CAAAA,QAAf","sourcesContent":["import { readPsd } from 'ag-psd';\nimport { writePsdBuffer } from 'ag-psd';\nimport 'ag-psd/initialize-canvas';\nimport axios from 'axios';\nconst writePSD = (data, templateData) => {\n  console.log('writePSD')\n  console.log(templateData)\n  const originalPsd = readPsd(Buffer.from(data.data), { skipLayerImageData: false, skipCompositeImageData: false, skipThumbnail: false });\n\n  if (templateData.currentCategory === 'Frame') {\n    console.info(`writePSD met Frame template`);\n    originalPsd.children.splice(1, 2);\n\n  } else if (templateData.currentCategory === 'Product') {\n    console.info(`writePSD met Product template`);\n    originalPsd.children.splice(2, 1);\n    originalPsd.children.splice(0, 1);\n  } else {\n    console.info(`writePSD met Message template`);\n    originalPsd.children.splice(0, 2);\n  }\n\n  const chosenElements = templateData.chosenElements.filter(element => element.selected);\n  console.log(chosenElements);\n  console.log(originalPsd.children[0].children);\n  //DOE DINGEN MET DE DINGEN DIE ELEMENT.SELECTED === true\n  chosenElements.forEach(item => {\n    console.log(item)\n  })\n\n\n  const buffer = writePsdBuffer(originalPsd);\n  const returnData = new FormData();\n  returnData.append('ori', JSON.stringify(buffer))\n  // returnData.append('template', JSON.stringify(templateData))\n\n  axios.post('/writeNewFile', returnData, {\n  }).then(res => {\n    console.log(res.statusText)\n  }).catch(function (error) {\n    console.log(error)\n  })\n}\n\nexport default writePSD;\n"]},"metadata":{},"sourceType":"module"}