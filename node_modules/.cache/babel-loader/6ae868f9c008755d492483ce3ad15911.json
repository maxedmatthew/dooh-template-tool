{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar helpers_1 = require(\"./helpers\");\n\nvar psdReader_1 = require(\"./psdReader\");\n\nfunction readBlendMode(reader) {\n  psdReader_1.checkSignature(reader, '8BIM');\n  return psdReader_1.readSignature(reader);\n}\n\nfunction readShadowInfo(reader) {\n  var size = psdReader_1.readUint32(reader);\n  var version = psdReader_1.readUint32(reader);\n  if (size !== 41 && size !== 51) throw new Error(\"Invalid effects shadow info size: \" + size);\n  if (version !== 0 && version !== 2) throw new Error(\"Invalid effects shadow info version: \" + version);\n  var blur = psdReader_1.readInt32(reader);\n  var intensity = psdReader_1.readInt32(reader);\n  var angle = psdReader_1.readInt32(reader);\n  var distance = psdReader_1.readInt32(reader);\n  var color = helpers_1.readColor(reader);\n  var blendMode = readBlendMode(reader);\n  var enabled = !!psdReader_1.readUint8(reader);\n  var useAngleInAllEffects = !!psdReader_1.readUint8(reader);\n  var opacity = psdReader_1.readUint8(reader);\n  var nativeColor = size >= 51 ? helpers_1.readColor(reader) : undefined;\n  return {\n    blur: blur,\n    intensity: intensity,\n    angle: angle,\n    distance: distance,\n    color: color,\n    blendMode: blendMode,\n    enabled: enabled,\n    useAngleInAllEffects: useAngleInAllEffects,\n    opacity: opacity,\n    nativeColor: nativeColor\n  };\n}\n\nfunction readOuterGlowInfo(reader) {\n  var size = psdReader_1.readUint32(reader);\n  var version = psdReader_1.readUint32(reader);\n  if (size !== 32 && size !== 42) throw new Error(\"Invalid effects outer glow info size: \" + size);\n  if (version !== 0 && version !== 2) throw new Error(\"Invalid effects outer glow info version: \" + version);\n  var blur = psdReader_1.readUint32(reader);\n  var intensity = psdReader_1.readUint32(reader);\n  var color = helpers_1.readColor(reader);\n  var blendMode = readBlendMode(reader);\n  var enabled = !!psdReader_1.readUint8(reader);\n  var opacity = psdReader_1.readUint8(reader);\n  var nativeColor = size >= 42 ? helpers_1.readColor(reader) : undefined;\n  return {\n    blur: blur,\n    intensity: intensity,\n    color: color,\n    blendMode: blendMode,\n    enabled: enabled,\n    opacity: opacity,\n    nativeColor: nativeColor\n  };\n}\n\nfunction readInnerGlowInfo(reader) {\n  var size = psdReader_1.readUint32(reader);\n  var version = psdReader_1.readUint32(reader);\n  if (size !== 33 && size !== 43) throw new Error(\"Invalid effects inner glow info size: \" + size);\n  if (version !== 0 && version !== 2) throw new Error(\"Invalid effects inner glow info version: \" + version);\n  var blur = psdReader_1.readUint32(reader);\n  var intensity = psdReader_1.readUint32(reader);\n  var color = helpers_1.readColor(reader);\n  var blendMode = readBlendMode(reader);\n  var enabled = !!psdReader_1.readUint8(reader);\n  var opacity = psdReader_1.readUint8(reader);\n  var invert = size >= 43 ? !!psdReader_1.readUint8(reader) : undefined;\n  var nativeColor = size >= 43 ? helpers_1.readColor(reader) : undefined;\n  return {\n    blur: blur,\n    intensity: intensity,\n    color: color,\n    blendMode: blendMode,\n    enabled: enabled,\n    opacity: opacity,\n    invert: invert,\n    nativeColor: nativeColor\n  };\n}\n\nfunction readBevelInfo(reader) {\n  var size = psdReader_1.readUint32(reader);\n  var version = psdReader_1.readUint32(reader);\n  if (size !== 58 && size !== 78) throw new Error(\"Invalid effects bevel info size: \" + size);\n  if (version !== 0 && version !== 2) throw new Error(\"Invalid effects bevel info version: \" + version);\n  var angle = psdReader_1.readUint32(reader);\n  var strength = psdReader_1.readUint32(reader);\n  var blur = psdReader_1.readUint32(reader);\n  var highlightBlendMode = readBlendMode(reader);\n  var shadowBlendMode = readBlendMode(reader);\n  var highlightColor = helpers_1.readColor(reader);\n  var shadowColor = helpers_1.readColor(reader);\n  var bevelStyle = psdReader_1.readUint8(reader);\n  var highlightOpacity = psdReader_1.readUint8(reader);\n  var shadowOpacity = psdReader_1.readUint8(reader);\n  var enabled = !!psdReader_1.readUint8(reader);\n  var useAngleInAllEffects = !!psdReader_1.readUint8(reader);\n  var up = !!psdReader_1.readUint8(reader);\n  var realHighlightColor = size >= 78 ? helpers_1.readColor(reader) : undefined;\n  var realShadowColor = size >= 78 ? helpers_1.readColor(reader) : undefined;\n  return {\n    angle: angle,\n    strength: strength,\n    blur: blur,\n    highlightBlendMode: highlightBlendMode,\n    shadowBlendMode: shadowBlendMode,\n    highlightColor: highlightColor,\n    shadowColor: shadowColor,\n    bevelStyle: bevelStyle,\n    highlightOpacity: highlightOpacity,\n    shadowOpacity: shadowOpacity,\n    enabled: enabled,\n    useAngleInAllEffects: useAngleInAllEffects,\n    up: up,\n    realHighlightColor: realHighlightColor,\n    realShadowColor: realShadowColor\n  };\n}\n\nfunction readSolidFillInfo(reader) {\n  var size = psdReader_1.readUint32(reader);\n  var version = psdReader_1.readUint32(reader);\n  if (size !== 34) throw new Error(\"Invalid effects solid fill info size: \" + size);\n  if (version !== 2) throw new Error(\"Invalid effects solid fill info version: \" + version);\n  var blendMode = readBlendMode(reader);\n  var color = helpers_1.readColor(reader);\n  var opacity = psdReader_1.readUint8(reader);\n  var enabled = !!psdReader_1.readUint8(reader);\n  var nativeColor = helpers_1.readColor(reader);\n  return {\n    blendMode: blendMode,\n    color: color,\n    opacity: opacity,\n    enabled: enabled,\n    nativeColor: nativeColor\n  };\n}\n\nfunction readEffects(reader) {\n  var version = psdReader_1.readUint16(reader);\n  if (version !== 0) throw new Error(\"Invalid effects layer version: \" + version);\n  var effectsCount = psdReader_1.readUint16(reader);\n  var effects = {};\n\n  for (var i = 0; i < effectsCount; i++) {\n    psdReader_1.checkSignature(reader, '8BIM');\n    var type = psdReader_1.readSignature(reader);\n\n    switch (type) {\n      case 'cmnS':\n        // common state (see See Effects layer, common state info)\n        var size = psdReader_1.readUint32(reader);\n        var version_1 = psdReader_1.readUint32(reader);\n        var visible = !!psdReader_1.readUint8(reader);\n        psdReader_1.skipBytes(reader, 2);\n        if (size !== 7 || version_1 !== 0 || !visible) throw new Error(\"Invalid effects common state\");\n        break;\n\n      case 'dsdw':\n        // drop shadow (see See Effects layer, drop shadow and inner shadow info)\n        effects.dropShadow = readShadowInfo(reader);\n        break;\n\n      case 'isdw':\n        // inner shadow (see See Effects layer, drop shadow and inner shadow info)\n        effects.innerShadow = readShadowInfo(reader);\n        break;\n\n      case 'oglw':\n        // outer glow (see See Effects layer, outer glow info)\n        effects.outerGlow = readOuterGlowInfo(reader);\n        break;\n\n      case 'iglw':\n        // inner glow (see See Effects layer, inner glow info)\n        effects.innerGlow = readInnerGlowInfo(reader);\n        break;\n\n      case 'bevl':\n        // bevel (see See Effects layer, bevel info)\n        effects.bevel = readBevelInfo(reader);\n        break;\n\n      case 'sofi':\n        // solid fill ( Photoshop 7.0) (see See Effects layer, solid fill (added in Photoshop 7.0))\n        effects.solidFill = readSolidFillInfo(reader);\n        break;\n\n      default:\n        throw new Error(\"Invalid effect type: '\" + type + \"'\");\n    }\n  }\n\n  return effects;\n}\n\nexports.readEffects = readEffects;\n\nfunction writeEffects(_writer, _effects) {\n  throw new Error('Not implemented');\n}\n\nexports.writeEffects = writeEffects;","map":null,"metadata":{},"sourceType":"script"}